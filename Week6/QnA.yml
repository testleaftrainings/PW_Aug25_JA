

### **File Download in Playwright**

1. **How does Playwright handle file downloads?**
   ➝ Using the `page.waitForEvent('download')` listener.

2. **How do you wait for a download event?**
   ➝ `const download = await page.waitForEvent('download');`.

3. **How do you capture and validate the file name being downloaded?**
   ➝ `expect(download.suggestedFilename()).toContain("doc");`.

5. **How do you download a file and save it to a custom path?**
   ➝ `await download.saveAs('custom/path/file.doc');`.


---

### **File Upload in Playwright**

1. **How to automate file uploads using Playwright?**
   ➝ `await page.setInputFiles('input[type=file]', 'filePath');`.

2. **Can you upload multiple files?**
   ➝ Yes, pass an array: `setInputFiles(['file1.txt','file2.txt']);`.

3. **How do you verify that a file was uploaded?**
   ➝ Check page UI (uploaded file name/confirmation message).

4. **How do you upload multiple files in Playwright?**
   ➝ `await page.setInputFiles(locator, [path1, path2]);`.

5. **How can you verify the uploaded file name on the page?**
   ➝ Assert text of uploaded file list element: `expect(locator).toContainText('file1.txt');`.

6. **What if the file input is hidden or custom-styled?**
   ➝ Upload directly using `setInputFiles`, no need to click it.

7. **How do you skip a test conditionally (e.g., based on browser)?**
   ➝ `test.skip(browserName === 'firefox', 'Not supported');`.

8. **How do you run a test only for a specific tag or annotation?**
   ➝ Use `test.only` or `npx playwright test -g "tagName"`.

9. **How can you mark a flaky test using test annotations?**
   ➝ `test.fixme('Flaky on slow network');`.

---

### **Storage State in Playwright**

1. **What is `storageState` in Playwright?**
   ➝ A JSON snapshot of cookies/local storage/session storage.

2. **How do you reuse login sessions between tests?**
   ➝ Save state after login and pass via `storageState` .

3. **What are the benefits of using `storageState`?**
   ➝ Avoids logging in for every test → faster execution.

4. **How do you save storage state after login and reuse it in another test?**
   ➝ `await context.storageState({ path: 'state.json' });` then reuse with `storageState: 'state.json'`.

---

### **Test Annotations**

1. **What are annotations like `test.skip`, `test.only`, `test.fixme`?**
   ➝ Control test execution: skip, run only, mark broken/flaky.

2. **When should you use annotations?**
   ➝ For conditional execution, debugging, or marking unstable tests.

3. **What’s the use of `test.describe.only`?**
   ➝ Runs only that describe block and ignores others.

---

### **Describe Blocks**

1. **What is `test.describe()` used for?**
   ➝ Group related tests.

2. **Can you group tests using `describe` blocks?**
   ➝ Yes, group logically related tests.

3. **How do you apply hooks like `beforeEach` inside describe blocks?**
   ➝ Place `beforeEach` inside `test.describe(() => { ... })`.

4. **How do you group tests and apply beforeEach only to that group?**
   ➝ Declare `beforeEach` inside that `describe` block only.

5. **How can you use nested describe blocks?**
   ➝ `test.describe("Parent", () => { 
   test.describe("Child", () => 
   {...}) })`.
